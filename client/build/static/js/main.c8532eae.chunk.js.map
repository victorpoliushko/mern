{"version":3,"sources":["hooks/http.hook.js","context/AuthContext.js","components/links-list.js","components/loader.js","pages/links-page.js","pages/CreatePage.js","components/link-card.js","pages/DetailPage.js","pages/AuthPage.js","hooks/message.hook.js","components/navbar.js","app.js","hooks/auth.hook.js","routes.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","LinksList","links","length","map","link","index","key","_id","from","to","console","log","className","Loader","LinksPage","setLinks","useContext","fetchedLinks","Authorization","fetched","useEffect","CreatePage","history","useHistory","auth","setLink","window","M","updateTextFields","pressHandler","event","push","placeholder","id","type","value","onChange","e","target","onKeyPress","htmlFor","LinkCard","href","rel","clicks","Date","date","toLocaleDateString","DetailPage","linkId","useParams","getLink","AuthPage","text","toast","html","email","password","form","setForm","changeHandler","name","registerHandler","loginHandler","disabled","onClick","Navbar","preventDefault","App","setToken","setUserId","ready","setReady","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8532eae.chunk.js","sourcesContent":["import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setLoading(true);\r\n      try {\r\n        if (body) {\r\n          body = JSON.stringify(body);\r\n          headers[\"Content-Type\"] = \"application/json\";\r\n        }\r\n        const response = await fetch(url, { method, body, headers });\r\n        const data = await response.json();\r\n\r\n        if (!response.ok) {\r\n          throw new Error(data.message || \"Something went wrong\");\r\n        }\r\n\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return {\r\n    loading,\r\n    request,\r\n    error,\r\n    clearError,\r\n  };\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext({\r\n  token: null,\r\n  userId: null,\r\n  login: noop,\r\n  logout: noop,\r\n  isAuthenticated: false,\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const LinksList = ({ links }) => {\r\n  if (!links.length) {\r\n    return <p className=\"center\">There is no links</p>;\r\n  }\r\n  return (\r\n    <div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>â„–</th>\r\n            <th>Original</th>\r\n            <th>Short</th>\r\n            <th>Open</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {links.map((link, index) => {\r\n            return (\r\n              <tr key={link._id}>\r\n                <td>{index}</td>\r\n                <td>{link.from}</td>\r\n                <td>{link.to}</td>\r\n                {console.log(\"Link id: \", link._id)}\r\n                <td>\r\n                  <Link to={`/detail/${link._id}`}>Open</Link>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./loader.css\";\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div className=\"preloader\">\r\n      <div className=\"preloader-wrapper active\">\r\n        <div className=\"spinner-layer spinner-red-only\">\r\n          <div className=\"circle-clipper left\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n          <div className=\"gap-patch\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n          <div className=\"circle-clipper right\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useCallback, useContext, useEffect } from \"react\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { LinksList } from \"../components/links-list\";\r\nimport { Loader } from \"../components/loader\";\r\n\r\nexport const LinksPage = () => {\r\n  const [links, setLinks] = useState([]);\r\n  const { request, loading } = useHttp();\r\n  const { token } = useContext(AuthContext);\r\n\r\n  const fetchedLinks = useCallback(async () => {\r\n    try {\r\n      const fetched = await request(\"/api/link\", \"GET\", null, {\r\n        Authorization: `Bearer ${token}`,\r\n      });\r\n      setLinks(fetched);\r\n    } catch (e) {\r\n      console.log(e.message);\r\n    }\r\n  }, [token, request]);\r\n\r\n  useEffect(() => {\r\n    fetchedLinks();\r\n  }, [fetchedLinks]);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return <>{!loading && <LinksList links={links} />}</>;\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport \"./create-page.css\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const CreatePage = () => {\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n  const { request } = useHttp();\r\n  const [link, setLink] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields();\r\n  }, []);\r\n\r\n  const pressHandler = async (event) => {\r\n    if (event.key === \"Enter\") {\r\n      try {\r\n        const data = await request(\r\n          \"/api/link/generate\",\r\n          \"POST\",\r\n          { from: link },\r\n          { Authorization: `Bearer ${auth.token}` }\r\n        );\r\n        history.push(`/detail/${data.link._id}`);\r\n      } catch (e) {\r\n        console.log(e.message);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"row input-div\">\r\n      <div className=\"col s8 offset-s2\">\r\n        <div className=\"input-field\">\r\n          <input\r\n            placeholder=\"Enter link\"\r\n            id=\"email\"\r\n            type=\"text\"\r\n            value={link}\r\n            onChange={(e) => setLink(e.target.value)}\r\n            onKeyPress={pressHandler}\r\n          />\r\n          <label htmlFor=\"link\">Enter link</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const LinkCard = ({ link }) => {\r\n  return (\r\n    <div>\r\n      <h2>Link</h2>\r\n      <p>\r\n        Your link:{\" \"}\r\n        <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer \">\r\n          {link.to}\r\n        </a>\r\n      </p>\r\n      <p>\r\n        Where from:{\" \"}\r\n        <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer \">\r\n          {link.from}\r\n        </a>\r\n      </p>\r\n      <p>\r\n        Link clicks: <strong>{link.clicks}</strong>\r\n      </p>\r\n      <p>\r\n        Creation date:{\" \"}\r\n        <strong>{new Date(link.date).toLocaleDateString()}</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useCallback, useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { Loader } from \"../components/loader\";\r\nimport { LinkCard } from \"../components/link-card\";\r\n\r\nexport const DetailPage = () => {\r\n  const [link, setLink] = useState(null);\r\n  const linkId = useParams().id;\r\n  const { request, loading } = useHttp();\r\n  const { token } = useContext(AuthContext);\r\n\r\n  const getLink = useCallback(async () => {\r\n    try {\r\n      const fetched = await request(`/api/link/${linkId}`, \"GET\", null, {\r\n        Authorization: `Bearer ${token}`,\r\n      });\r\n      setLink(fetched);\r\n    } catch (e) {}\r\n  }, [linkId, token, request]);\r\n\r\n  useEffect(() => {\r\n    getLink();\r\n  }, [getLink]);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n  return <>{!loading && link && <LinkCard link={link} />}</>;\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { useMessage } from \"../hooks/message.hook\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nimport \"./authPage.css\";\r\n\r\nexport const AuthPage = () => {\r\n  const message = useMessage();\r\n  const auth = useContext(AuthContext);\r\n  const { loading, error, request, clearError } = useHttp();\r\n  const [form, setForm] = useState({ email: \"\", password: \"\" });\r\n\r\n  useEffect(() => {\r\n    message(error);\r\n    clearError();\r\n  }, [error, message, clearError]);\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields();\r\n  }, []);\r\n\r\n  const changeHandler = (event) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const registerHandler = async () => {\r\n    try {\r\n      const data = await request(\"/api/auth/register\", \"POST\", { ...form });\r\n      message(data.message);\r\n    } catch (e) {}\r\n  };\r\n\r\n  const loginHandler = async () => {\r\n    try {\r\n      const data = await request(\"/api/auth/login\", \"POST\", { ...form });\r\n      auth.login(data.token, data.userId);\r\n    } catch (e) {}\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s6 offset-s3\">\r\n        <h2>App name</h2>\r\n        <div className=\"card blue darken-1\">\r\n          <div className=\"card-content white-text\">\r\n            <span className=\"card-title\">Authorization</span>\r\n            <div className=\"\">\r\n              <div className=\"input-field\">\r\n                <input\r\n                  placeholder=\"Enter email\"\r\n                  id=\"email\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  className=\"yellow-input\"\r\n                  value={form.email}\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <input\r\n                  placeholder=\"Enter password\"\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  className=\"yellow-input\"\r\n                  value={form.password}\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-action\">\r\n            <button\r\n              className=\"btn yellow darken-4 login-btn\"\r\n              disabled={loading}\r\n              onClick={loginHandler}\r\n            >\r\n              Login\r\n            </button>\r\n            <button\r\n              className=\"btn grey lighten-4 black-text\"\r\n              disabled={loading}\r\n              onClick={registerHandler}\r\n            >\r\n              Register\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useCallback } from \"react\";\r\n\r\nexport const useMessage = () => {\r\n  return useCallback((text) => {\r\n    if (window.M && text) {\r\n      window.M.toast({ html: text });\r\n    }\r\n  }, []);\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport \"./navbar.css\";\r\n\r\nexport const Navbar = () => {\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n  const logoutHandler = (e) => {\r\n    e.preventDefault();\r\n    auth.logout();\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <div className=\"nav-wrapper blue darken-1  navbar\">\r\n          <span href=\"/\" className=\"brand-logo\">\r\n            App name\r\n          </span>\r\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n            <li>\r\n              <NavLink to=\"/create\">Create</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/links\">Links</NavLink>\r\n            </li>\r\n            <li>\r\n              <a href=\"/\" onClick={logoutHandler}>\r\n                Logout\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useRoutes } from \"./routes\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { useAuth } from \"./hooks/auth.hook\";\r\nimport \"materialize-css\";\r\nimport \"./index.css\";\r\nimport { AuthContext } from \"./context/AuthContext\";\r\nimport { Navbar } from \"./components/navbar\";\r\nimport { Loader } from \"./components/loader\";\r\n\r\nfunction App() {\r\n  const { token, userId, login, logout, ready } = useAuth();\r\n  const isAuthenticated = !!token;\r\n  const routes = useRoutes(isAuthenticated);\r\n\r\n  if (!ready) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ token, userId, login, logout, isAuthenticated }}\r\n    >\r\n      <BrowserRouter>\r\n        {isAuthenticated && <Navbar />}\r\n        <div>{routes}</div>\r\n      </BrowserRouter>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useCallback, useEffect } from \"react\";\r\n\r\nconst storageName = \"userData\";\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [ready, setReady] = useState(false);\r\n\r\n  const login = useCallback((jwtToken, id) => {\r\n    setToken(jwtToken);\r\n    setUserId(id);\r\n    localStorage.setItem(\r\n      storageName,\r\n      JSON.stringify({ userId: id, token: jwtToken })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(storageName);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(storageName));\r\n    if (data && data.token) {\r\n      login(data.token, data.userId);\r\n    }\r\n    setReady(true);\r\n  }, [login]);\r\n\r\n  return { login, logout, token, userId, ready };\r\n};\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { LinksPage } from \"./pages/links-page\";\r\nimport { CreatePage } from \"./pages/CreatePage\";\r\nimport { DetailPage } from \"./pages/DetailPage\";\r\nimport { AuthPage } from \"./pages/AuthPage\";\r\n\r\nexport const useRoutes = (isAuthenticated) => {\r\n  if (isAuthenticated) {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/links\" exact>\r\n          <LinksPage />\r\n        </Route>\r\n        <Route path=\"/create\" exact>\r\n          <CreatePage />\r\n        </Route>\r\n        <Route path=\"/detail/:id\">\r\n          <DetailPage />\r\n        </Route>\r\n        <Redirect to=\"/create\" />\r\n      </Switch>\r\n    );\r\n  }\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <AuthPage />\r\n      </Route>\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}